
#import "Compiler";
#import "Basic";
#import "LibC";
#import "Array";
#import "C_Build";

func @metaprogram main() {
    var as_metaprogram = false;

    mkdir("run_tree");
    mkdir("build");

    var options: Build_Options;
    options.executable_name = "run_tree/a2600";
    // options.verbose_diagnostics = true;
    // options.emit_llvm_ir = true;

    var compiler = create_compiler_instance(*options);
    var cwd = get_working_directory();
    compiler_add_library_search_path(compiler, concatenate(cwd, "/build"));
    compiler_add_library_search_path(compiler, concatenate(cwd, "/src"));
    compiler_add_module_search_path(compiler, concatenate(cwd, "/src"));

    compiler_add_compiled_object_for_linking(compiler, "build/stb_truetype.o");
    compiler_add_compiled_object_for_linking(compiler, "build/miniaudio.o");

    compile_c_lib("src/stb_truetype.c", "build/stb_truetype", false);
    compile_c_lib("src/miniaudio.c", "build/miniaudio", false);

    if compiler_load_file(compiler, "src/main.jyu") != true return;
    if compiler_typecheck_program(compiler) != true return;
    if compiler_generate_llvm_module(compiler) != true return;

    if as_metaprogram {
        if compiler_run_metaprogram(compiler, 0, null) != true return;
    } else {
        if compiler_emit_object_file(compiler) != true return;
        if compiler_run_default_link_command(compiler) != true return;
    }
}
